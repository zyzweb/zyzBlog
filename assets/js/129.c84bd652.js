(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{572:function(_,v,t){"use strict";t.r(v);var a=t(2),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("通常加密算法也指密码学")]),_._v(" "),v("p",[_._v("分为可逆加密和不可逆加密，可逆加密又可以分为：对称加密和非对称加密")]),_._v(" "),v("p",[_._v("不可逆加密的最大特点是不需要秘钥")]),_._v(" "),v("p",[_._v("不可逆加密算法:  MD5 SHA1 SHA-256 SHA-512")]),_._v(" "),v("p",[v("mark",[_._v("对称加密算法")]),_._v(": AES128 AES256  DES  3DES  RC5")]),_._v(" "),v("p",[v("mark",[_._v("非对称加密算法")]),_._v(": RSA  ECC(移动设备用)")]),_._v(" "),v("p",[_._v("Hash算法: md5")]),_._v(" "),v("p",[_._v("签名算法中，私钥用于对数据进行签名，公钥用于对签名进行验证")]),_._v(" "),v("p",[v("strong",[_._v("AES")]),_._v(" Advanced Encryption Standard  高级加密标准  微信小程序加密传输使用这个算法")]),_._v(" "),v("p",[v("strong",[_._v("MD5")]),_._v(" Message-Digest Algorithm  信息摘要算法  128位(16字节)")]),_._v(" "),v("p",[v("strong",[_._v("SHA")]),_._v(" Secure Hash Algorithm  安全散列算法")]),_._v(" "),v("p",[v("strong",[_._v("RSA")]),_._v("  3个发明者的姓氏首字母  github ssh使用")]),_._v(" "),v("h3",{attrs:{id:"对称加密和非对称加密的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密的区别"}},[_._v("#")]),_._v(" 对称加密和非对称加密的区别")]),_._v(" "),v("p",[_._v("对称加密 加密和解密都用同一把密钥")]),_._v(" "),v("p",[_._v("非对称加密  加密和解密用的不是同一把秘钥,分公私钥")]),_._v(" "),v("h3",{attrs:{id:"非对称加密原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密原理"}},[_._v("#")]),_._v(" 非对称加密原理")]),_._v(" "),v("p",[_._v("传输双方均有自己的一对密钥,共4把,服务器生成公钥和私钥并把公私给客户端,客户端生成公钥和私钥,把公钥给服务器,服务器给客户端传递消息用客户端的公钥加密然后发送,客户端接收信息用客户端私钥解密,客户端给服务器发送消息同理")]),_._v(" "),v("p",[_._v("对称加密加解密都是同一把密钥,泄漏之后就不安全,非对称只会传公钥,泄漏也没有影响")]),_._v(" "),v("h3",{attrs:{id:"https原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https原理"}},[_._v("#")]),_._v(" https原理")]),_._v(" "),v("p",[_._v("https 结合了对称加密和非对称加密,用非对称加密的方式来传输对称加密的密钥，之后用对称加密的方式来传输数据,同时使用了HASH算法")]),_._v(" "),v("p",[_._v("rsa + aes + hash算法")]),_._v(" "),v("h3",{attrs:{id:"数字证书"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[_._v("#")]),_._v(" 数字证书")]),_._v(" "),v("p",[_._v("非对称加密也有可能被中间人攻击,需要确定这把公钥就是服务器的,数字证书就是解决这个问题的")]),_._v(" "),v("p",[_._v("实现流程:")]),_._v(" "),v("ol",[v("li",[_._v("我们需要找到一个第三方机构，它是一个拥有公信力、大家都认可的认证中心，那就是数字证书认证机构(简称CA)。")]),_._v(" "),v("li",[_._v("服务器在给客户端传输公钥的过程中，会把公钥以及服务器的个人信息通过Hash算法生成信息摘要。为了防止信息摘要被人调换，客户端还会用CA提供的私钥对信息摘要进行加密来形成数字签名。并且，最后还会把原来没Hash算法之前的个人信息以及公钥和数字签名合并在一起，形成数字证书。")]),_._v(" "),v("li",[_._v("当客户端拿到这份数字证书之后，就会用CA提供的公钥来对数字证书里面的数字签名进行解密来得到信息摘要，然后对数字证书里服务器的公钥以及个人信息进行Hash得到另外一份信息摘要。最后把两份信息摘要进行对比，如果一样，则证明这个人是服务器，否则就不是。这样，就可以保证服务器的公钥安全着交给客户端了")])]),_._v(" "),v("p",[_._v("CA的证书内置在系统里了,不需要进行传递,安全性就比较有保障了")]),_._v(" "),v("h3",{attrs:{id:"握手过程的简单描述如下"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#握手过程的简单描述如下"}},[_._v("#")]),_._v(" 握手过程的简单描述如下：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("浏览器将自己支持的一套加密规则发送给网站。")])]),_._v(" "),v("li",[v("p",[_._v("网站从中选出一组加密算法与HASH算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。")])]),_._v(" "),v("li",[v("p",[_._v("获得网站证书之后浏览器要做以下工作：")])])]),_._v(" "),v("ul",[v("li",[v("p",[_._v("验证证书的合法性（颁发证书的机构是否合法，证书中包含的网站地址是否与正在访问的地址一致等），如果证书受信任，则浏览器栏里面会显示一个小锁头，否则会给出证书不受信的提示。")])]),_._v(" "),v("li",[v("p",[_._v("如果证书受信任，或者是用户接受了不受信的证书，浏览器会生成一串随机数的密码，并用证书中提供的公钥加密。")])]),_._v(" "),v("li",[v("p",[_._v("使用约定好的HASH计算握手消息，并使用生成的随机数对消息进行加密，最后将之前生成的所有信息发送给网站。")])])]),_._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[_._v("网站接收浏览器发来的数据之后要做以下的操作：")])]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用自己的私钥将信息解密取出密码，使用密码解密浏览器发来的握手消息，并验证HASH是否与浏览器发来的一致。")])]),_._v(" "),v("li",[v("p",[_._v("使用密码加密一段握手消息，发送给浏览器。")])])]),_._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[_._v("浏览器解密并计算握手消息的HASH，如果与服务端发来的HASH一致，此时握手过程结束，之后所有的通信数据将由之前浏览器生成的随机密码并利用对称加密算法进行加密。")])]),_._v(" "),v("p",[_._v("这里浏览器与网站互相发送加密的握手消息并验证,目的是为了保证双方都获得了一致的密码,并且可以正常的加密解密数据。其中非对称加密算法用于在握手过程中加密生成的密码,对称加密算法用于对真正传输的数据进行加密,而HASH算法用于验证数据的完整性。由于浏览器生成的密码是整个数据加密的关键,因此在传输的时候使用了非对称加密算法对其加密。非对称加密算法会生成公钥和私钥,公钥只能用于加密数据,因此可以随意传输,而网站的私钥用于对数据进行解密,所以网站都会非常小心的保管自己的私钥,防止泄漏。")]),_._v(" "),v("p",[_._v("TLS握手过程中如果有任何错误,都会使加密连接断开,从而阻止了隐私信息的传输。正是由于HTTPS非常的安全,攻击者无法从中找到下手的地方,于是更多的是采用了假证书的手法来欺骗客户端,从而获取明文的信息")]),_._v(" "),v("h3",{attrs:{id:"长度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#长度"}},[_._v("#")]),_._v(" 长度")]),_._v(" "),v("p",[_._v("MD5 128 位（32 个字符）")]),_._v(" "),v("p",[_._v("SHA1 160 位（40 个字符）")]),_._v(" "),v("p",[_._v("SHA256 256 位 (64个字符)")]),_._v(" "),v("h3",{attrs:{id:"参考链接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[_._v("#")]),_._v(" 参考链接")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://segmentfault.com/a/1190000019687184",target:"_blank",rel:"noopener noreferrer"}},[_._v("HTTPS的加密方式"),v("OutboundLink")],1)]),_._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6985035199453085727",target:"_blank",rel:"noopener noreferrer"}},[_._v("掘金-cryptojs 进行AES对称加密"),v("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=r.exports}}]);