(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{596:function(e,t,r){"use strict";r.r(t);var n=r(2),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("5s 内打开页面")]),e._v(" "),t("h2",{attrs:{id:"静态资源优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态资源优化"}},[e._v("#")]),e._v(" 静态资源优化")]),e._v(" "),t("p",[e._v("压缩 gif\nGifsicle：通过改变每帧比例，减小 gif 文件大小，同时可以使用透明来达到更小的\n文件大小，目前公认的解决方案。\n安装：\nhttp://www.lcdf.orq/gifsicle/\n使用方式：\n优化级别设置为不小于 2,1 的汗甘大下 r 惊一-otimize=3-0out.gif in.gif\n02:57\n11:19\n·将透明部分截去 gifsicle-optimize=3-crop-transparency-oout.gif in.gif")]),e._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220914000214127.png",alt:"image-20220914000214127"}}),e._v(" "),t("p",[e._v("图片服务器自动优化解密\n·名词解释")]),e._v(" "),t("ul",[t("li",[e._v("图片服务器自动化优化是可以在图片 URL 链接上增加不同特殊参数，服务器自动化生成。")]),e._v(" "),t("li",[e._v("·不同格式、大小、质量的图片。")])]),e._v(" "),t("p",[e._v("处理方式")]),e._v(" "),t("ul",[t("li",[e._v("图片裁剪：按长边、短边、填充、拉伸等缩放。")]),e._v(" "),t("li",[e._v("图片格式转换：支持 JPG,GIF,PNG,WbP 等，支持不同的图片压缩率。")]),e._v(" "),t("li",[e._v("图片处理：添加图片水印、高斯模糊、重心处理、裁剪边框等。")]),e._v(" "),t("li",[e._v("A!能力：鉴黄以及智能抠图、智能排版、智能配色、智能合成等 A!功能。")])]),e._v(" "),t("p",[e._v('文件放在合适位置\n·CSS 样式文件链接尽量放在页面头部\nCSS 加载不会阻塞 DOM tree 解析，但是会阻塞 DOM Tree 渲染，也会阻塞后面 JS 执行。\n任何 body 元素之前，可以确保在文档部分中解析了所有 CSS 样式（内联和外联)，从而减\n少了浏览器必须重排文档的次数。如果放置页面底部，就要等待最后一个 CSS 文件下载完成，\n此时会出现"白屏"，影响用户体验。\n·JS 引用放在 HTML 底部\n·防止」S 的加载、解析、执行对阻塞页面后续元素的正常渲染。')]),e._v(" "),t("p",[e._v("提升 CSS 渲染性能\n提升 CSS 渲染性能\n·谨慎使用 expensive 属性\n·如：nth-child 伪类；position:fixed 定位\n·尽量减少样式层级数\n·如 div ul li span i{color:blue;}\n·尽量避免使用占用过多 CUP 和内存的属性\n·如 text-indnt:-99999px\n·尽量避免使用耗电量大的属性\n.如 CSS33 D transforms5、Css tranoro、opaciy")]),e._v(" "),t("p",[e._v("合理使用 Web Fonts\n·将字体部署在 CDN 上\n·将字体以 base64 形式保存在 CSS 中并通过 localStorage 进行缓存\n·Google 字体库因为某些不可抗拒原因，应该使用国内托管服务")]),e._v(" "),t("p",[e._v("CSS 动画优化\n·尽量避免同时动画\n延迟动画初始化\n·结合 SVG")]),e._v(" "),t("p",[e._v("用 docker 将 node_modules 打包成二进制文件")]),e._v(" "),t("p",[e._v("用本地缓存减少接口请求")]),e._v(" "),t("h3",{attrs:{id:"link-标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#link-标签"}},[e._v("#")]),e._v(" link 标签")]),e._v(" "),t("p",[e._v("prefetch preload preconnect dns-prefetch apple-touch-icon canonical prerender")]),e._v(" "),t("p",[e._v("preconnect 可以看成是升级版的 dns-prefetch prerender 是 preconnect 的升级版")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.naeco.top/2021/02/28/preload-prefetch-preconnect/",target:"_blank",rel:"noopener noreferrer"}},[e._v("preload、prefetch 和 preconnect 的简单介绍"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTML/Link_types")]),e._v(" "),t("p",[t("img",{attrs:{src:"http://image.zhuyuanzheng.top/image-20220630163706897.png",alt:"image-20220630163706897"}})]),e._v(" "),t("h3",{attrs:{id:"preload-prefetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preload-prefetch"}},[e._v("#")]),e._v(" preload && prefetch")]),e._v(" "),t("p",[t("strong",[e._v("preload")]),e._v(" 预加载 当前页面需要用到的资源 优先级比 prefetch 高")]),e._v(" "),t("p",[e._v("被放入 memory cache")]),e._v(" "),t("p",[e._v("在解析 css 和 js 的同时下载,强制浏览器在不阻塞 document 的 onload 事件的情况下请求资源")]),e._v(" "),t("p",[e._v('使用 as 或 type 属性表示资源的优先级 as="style"优先级最高')]),e._v(" "),t("p",[e._v("需要提供 as 属性,否则导致获取 2 次")]),e._v(" "),t("p",[e._v("preload 字体不带 crossorigin 也将会二次获取,需要加上")]),e._v(" "),t("p",[e._v("网络-优先级可以查看资源加载的优先级属性")]),e._v(" "),t("img",{staticStyle:{zoom:"30%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220707175215232.png",alt:"image-20220707175215232"}}),e._v(" "),t("p",[e._v("没有用到的 "),t("code",[e._v("preload")]),e._v(" 资源在 Chrome 的 "),t("code",[e._v("console")]),e._v(" 里会在 onload 事件 3s 后发生警告")]),e._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220707175441719.png",alt:"image-20220707175441719"}}),e._v(" "),t("p",[t("strong",[e._v("prefetch")]),e._v(" 预读取")]),e._v(" "),t("p",[e._v("以后可能会用到的资源比如其他网页、继续滚动才会加载的资源等")]),e._v(" "),t("p",[e._v("有 2 种分为 prefetch 和 dns-prefetch(用于跨域资源,常用于 CDN、以及请求第三方资源，比如 google font、google analytics 等)")]),e._v(" "),t("p",[e._v("在 Chrome 中,如果用户导航离开一个页面,而对其他页面的预取请求仍在进行中,这些请求将不会被终止")]),e._v(" "),t("p",[e._v("无论资源的可缓存性如何，prefetch 请求在未指定的网络堆栈缓存中至少保存 5 分钟")]),e._v(" "),t("h3",{attrs:{id:"lighthouse-检测性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lighthouse-检测性能"}},[e._v("#")]),e._v(" lighthouse 检测性能")]),e._v(" "),t("h3",{attrs:{id:"性能优化指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化指标"}},[e._v("#")]),e._v(" 性能优化指标")]),e._v(" "),t("p",[t("strong",[e._v("FP")])]),e._v(" "),t("p",[t("strong",[e._v("FCP")])]),e._v(" "),t("p",[t("strong",[e._v("LCP")])]),e._v(" "),t("h3",{attrs:{id:"页面生命周期-document-readystate-查看"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面生命周期-document-readystate-查看"}},[e._v("#")]),e._v(" 页面生命周期 (document.readyState 查看)")]),e._v(" "),t("p",[t("strong",[e._v("DOMContentLoaded")]),e._v(" 在 DOM 树准备就绪在 document 上触发 "),t("strong",[e._v('document.addEventListener("DOMContentLoaded", ready)')])]),e._v(" "),t("p",[e._v("页面在解析时遇到 script 会停止解析 dom,因为 js 可能操作 dom, DOMContentLoaded 在 js 执行完之后触发,但是包含 async 的 js 不会阻塞")]),e._v(" "),t("p",[t("strong",[e._v("load")]),e._v(" 在页面所有资源加载完毕之后在 window 上触发 "),t("strong",[e._v("window.addEventListener('load', callback)")])]),e._v(" "),t("p",[t("strong",[e._v("unload")]),e._v(' 在页面卸载的时候触发 window.addEventListener("unload", function() { navigator.sendBeacon("/analytics", JSON.stringify(analyticsData)); })')]),e._v(" "),t("p",[t("strong",[e._v("baforeunload")]),e._v(' 在页面卸载之前触发 window.addEventListener("baforeunloadunload", callback)')]),e._v(" "),t("h3",{attrs:{id:"defer-与-async-type-module-相当于-defer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#defer-与-async-type-module-相当于-defer"}},[e._v("#")]),e._v(" defer 与 async (type=module 相当于 defer)")]),e._v(" "),t("p",[e._v("script 放在顶部会阻塞页面,放尾部可能加载时间过长,后面才下载 js 执行 js,放顶部可以使用 defer 和 async 来避免阻塞页面,同时可以并行下载 js")]),e._v(" "),t("p",[e._v("defer 属性的 script 不会阻塞页面,会在 dom 解析完毕以及其他 js 执行完毕在执行,在 DOMContentLoaded 之前执行,相当于单线程顺序执行,script 依赖 dom 或者其他第三方库需要这样设置")]),e._v(" "),t("p",[e._v("async 属性的 script 不会阻塞页面 会在后台运行,跟 dom 和其他 script 执行完全独立,相当于多线程在另外一个线程运行")]),e._v(" "),t("p",[e._v("defe 和 asyncr 可以不用放在 body 尾部,避免了放尾部加载时间过长")]),e._v(" "),t("h3",{attrs:{id:"import-与-require"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import-与-require"}},[e._v("#")]),e._v(" import 与 require")]),e._v(" "),t("p",[e._v("import 和 export 一起使用 属于 es6 模块 简称 esm "),t("strong",[e._v("浏览器和 node 通用")]),e._v(" 浏览器上使用 type=module node 中使用.mjs 或者在 package.json 中定义")]),e._v(" "),t("p",[e._v('"type": "module" .mjs 文件总是以 ES6 模块加载，.cjs 文件总是以 CommonJS 模块加载，.js 文件的加载取决于 package.json 里面 type 字段的设置')]),e._v(" "),t("p",[e._v("使用 import()动态加载类似 require()但是前者异步,后者同步 node13.2 版本开始支持")]),e._v(" "),t("p",[e._v("编译时加载可以静态分析和类型检测,treeshaking 依赖 import export")]),e._v(" "),t("p",[e._v("require()和 module.export 一起使用 属于 commonjs 模块 "),t("strong",[e._v("只能在 node 上用")])]),e._v(" "),t("p",[e._v("运行时加载不可以静态分析和类型检测")]),e._v(" "),t("h3",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("网页版 lighthouse"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://pagespeed.web.dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("google - 页面速度测速工具"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.fundebug.com/2019/04/11/understand-preload-and-prefetch/",target:"_blank",rel:"noopener noreferrer"}},[e._v("web 性能优化系列"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6870141103958589454#heading-12",target:"_blank",rel:"noopener noreferrer"}},[e._v("掘金-模块化"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);