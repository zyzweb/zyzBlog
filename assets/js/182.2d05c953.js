(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{625:function(e,t,a){"use strict";a.r(t);var n=a(2),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"使用-npm-link-调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-npm-link-调试"}},[e._v("#")]),e._v(" 使用 npm link 调试")]),e._v(" "),t("p",[e._v("假设有个项目 "),t("code",[e._v("projcet")]),e._v(",引用了"),t("code",[e._v("test-package")]),e._v(",如何调试"),t("code",[e._v("project")]),e._v("项目 "),t("code",[e._v("node_modules")]),e._v("中的"),t("code",[e._v("test-package")])]),e._v(" "),t("ul",[t("li",[e._v("切到"),t("code",[e._v("test-package")]),e._v("目录,"),t("code",[e._v("npm link")]),e._v(" 本质就是给全局 node_modules 增加了软链接")]),e._v(" "),t("li",[e._v("切到"),t("code",[e._v("project")]),e._v("目录，"),t("code",[e._v("npm link test-package")]),e._v(" 要和 package.json 中的 name 一致")]),e._v(" "),t("li",[e._v("取消 npm link 切到 project npm unlink test-package 然后卸载全局包 npm uninstall test-package -g")])]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220907164532201.png",alt:"image-20220907164532201"}}),e._v(" "),t("h3",{attrs:{id:"yalc-比-npm-link-更好"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yalc-比-npm-link-更好"}},[e._v("#")]),e._v(" yalc (比 npm link 更好)")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#不影响node_modules中原来的good-ui")]),e._v("\nyalc publish  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#在依赖包执行")]),e._v("\nyalc "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" good-ui  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#在当前项目执行")]),e._v("\nyalc remove good-ui  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#在当前项目执行")]),e._v("\nyalc push   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#更新依赖包 ===yalc publish --push")]),e._v("\n")])])]),t("h3",{attrs:{id:"直接在-node-modules-中调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直接在-node-modules-中调试"}},[e._v("#")]),e._v(" 直接在 node_modules 中调试")]),e._v(" "),t("p",[e._v("引用 node_moduels 的包 改为在当前项目编译")]),e._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://stackoverflow.com/questions/47021083/vscode-debug-code-in-node-modules-directory",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode debug code in node_modules directory"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/7033400734746066957",target:"_blank",rel:"noopener noreferrer"}},[e._v("yalc: 可能是最好的前端 link 调试方案"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/azl397985856/article/details/117677578",target:"_blank",rel:"noopener noreferrer"}},[e._v("居然有比 npm link 更好的调试？"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);