(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{637:function(t,e,a){"use strict";a.r(e);var r=a(2),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("需要修改求职状态")]),t._v(" "),e("p",[t._v("邮件和电话要关注")]),t._v(" "),e("p",[t._v("技术栈掌握层次有 3 个,熟悉 掌握 精通")]),t._v(" "),e("p",[t._v("react 时间切片 requestIdleCallback")]),t._v(" "),e("p",[t._v("fiber hooks")]),t._v(" "),e("p",[t._v("Hook 本质上来说就是一个 JavaScript 函数")]),t._v(" "),e("ul",[e("li",[t._v("只在最顶层使用 Hook，不能在循环、条件或嵌套函数中调用 Hook。")]),t._v(" "),e("li",[t._v("只能在 React 函数中调用 Hook，不能在普通 JavaScript 函数中调用 Hook")])]),t._v(" "),e("p",[t._v("白屏时间: window.performance.timing.domLoading - window.performance.timing.navigationStart")]),t._v(" "),e("p",[t._v("首屏时间: window.performance.timing.domInteractive - window.performace.timing.navigationStart")]),t._v(" "),e("p",[t._v("navigationStart 页面开始加载")]),t._v(" "),e("p",[t._v("domLoading FirstPaint\ndomContentLoadedEventEnd DomContentLoaded")]),t._v(" "),e("p",[t._v("loadEventEnd Loaded")]),t._v(" "),e("p",[t._v("页面首次渲染时间：FP(firstPaint)=domLoading-navigationStart")]),t._v(" "),e("p",[t._v("DOM 加载完成：DCL(DOMContentEventLoad)=domContentLoadedEventEnd-navigationStart")]),t._v(" "),e("p",[t._v("图片、样式等外链资源加载完成：L(Load)=loadEventEnd-navigationStart")]),t._v(" "),e("p",[t._v("提前加载 preload prefetch")]),t._v(" "),e("p",[t._v("https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming")]),t._v(" "),e("h3",{attrs:{id:"原型的三角关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型的三角关系"}},[t._v("#")]),t._v(" 原型的三角关系")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220608100807269.png",alt:"image-20220608100807269"}}),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("#垂直居中\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"ref-reactive-toref-torefs-区别与联系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref-reactive-toref-torefs-区别与联系"}},[t._v("#")]),t._v(" ref reactive toRef toRefs 区别与联系")]),t._v(" "),e("p",[t._v("联系: 这 4 个函数都是用在 setup 函数中的,都是从 vue 对象导出来\n区别:")]),t._v(" "),e("ol",[e("li",[t._v("ref 用来定义简单响应式数据类型")]),t._v(" "),e("li",[t._v("reactive 用来定义复杂响应式数据类型")]),t._v(" "),e("li",[t._v("toRef 用来转换响应式数据对象中的单个属性,可以理解为解构 reactive 定义的响应式对象的单个属性")]),t._v(" "),e("li",[t._v("toRefs 用来转换响应式数据对象中的所有属性,可以理解为解构 reactive 定义的响应式对象的所有属性")])]),t._v(" "),e("h3",{attrs:{id:"document-readystate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#document-readystate"}},[t._v("#")]),t._v(" document.readyState")]),t._v(" "),e("p",[t._v("document 有 readyState 属性来描述 document 的 loading 状态，readyState 的改变会触发 readystatechange 事件\nreadyState 的值对应的状态如下\n0：创建了 XMLHTTPRequest 通信\n1：调用了 open 方法\n2：写入了 header 并且执行了 send\n3：loading 正在加载，已经收到数据头\n4：finish 数据传输完成，（成功或失败都是完成状态）并且关闭了通信\nreadystatechange 事件与 load 事件的区别是：不会判断所有的东西都传输成功了，仅仅是 dom 文档传输完成")]),t._v(" "),e("h3",{attrs:{id:"pinia-对比-vuex-3-4-的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pinia-对比-vuex-3-4-的优势"}},[t._v("#")]),t._v(" pinia 对比 vuex 3/4 的优势")]),t._v(" "),e("ol",[e("li",[t._v("没有 mutation 了")]),t._v(" "),e("li",[t._v("action 同步异步都支持,用法更简单")]),t._v(" "),e("li",[t._v("与 vue devtools 集成更紧密")]),t._v(" "),e("li",[t._v("提供了 composition api")]),t._v(" "),e("li",[t._v("支持 ts")]),t._v(" "),e("li",[t._v("不在有 modules 的嵌套结构")])]),t._v(" "),e("h3",{attrs:{id:"slice-substr-substring-异同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slice-substr-substring-异同"}},[t._v("#")]),t._v(" slice substr substring 异同")]),t._v(" "),e("p",[t._v("substr 截取长度(==已被废弃==) substring 截取索引 slice 截取 string 和 Array 都是截取索引")]),t._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220610121729957.png",alt:"image-20220610121729957"}}),t._v(" "),e("p",[t._v("题库参考：https://www.nowcoder.com/ta/huawei (牛客网华为机试)\n有时间再刷 leetcode：https://leetcode-cn.com/problemset/all (全部简单题跟中等题，一般数组、字符串、动态规划考的多)\n建议：\n因为机考在牛客网上，跟 lc 的区别在于需要写完整版代码包括头文件输入输出\n一般的输入格式为：while(cin>>n) 或者 getline(cin,s)\n有时候代码对了但是只能过 80%拿不到 100%，可能是少考虑了精度，把 int 换成 long long\n有时候不知道怎么 ac，就手推公式找规律，恰烂分，直接输出几种可能的答案。\n华为机试题库"),e("em",[t._v("在线编程+题解")]),t._v("牛客题霸_牛客网\n【牛客题霸专属】华为笔试在线训练题库，每道题均来源华为历年笔试卷，且配有题解，包含考试模式和练习模式，可切换练习。涵盖数组、动态规划、贪心、排序、二分、双指针、哈希、树、堆、栈等知识点，提高求职笔试能力")]),t._v(" "),e("h3",{attrs:{id:"前端缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端缓存"}},[t._v("#")]),t._v(" 前端缓存")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("Cache-Control: max-age"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("31536000")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不常变化的资源  时间设置长点")]),t._v("\nCache-Control: no-cache  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#经常变化的资源")]),t._v("\n")])])]),e("p",[t._v("浏览器缓存分为强缓存 协商缓存")]),t._v(" "),e("p",[t._v("按位置分为 Service Worker Memory Cache Disk Cache")]),t._v(" "),e("h3",{attrs:{id:"service-worker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" service worker")]),t._v(" "),e("p",[t._v("可以自己存取,自由度更高,在应用 -- 缓存空间 查看")]),t._v(" "),e("p",[t._v("永久有效,只能通过手动调用 API "),e("code",[t._v("cache.delete(resource)")]),t._v(" 或者容量超过限制,被浏览器全部清空")]),t._v(" "),e("h3",{attrs:{id:"memory-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache"}},[t._v("#")]),t._v(" Memory Cache")]),t._v(" "),e("p",[t._v("无视 HTTP 头信息 no-store 除外")]),t._v(" "),e("p",[e("strong",[t._v("f5 刷新会用 memory cache,关闭 tab 打开用 disk cache")])]),t._v(" "),e("h3",{attrs:{id:"disk-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#disk-cache"}},[t._v("#")]),t._v(" Disk Cache")]),t._v(" "),e("p",[t._v("也叫 HTTP cache,相同的资源可以在"),e("strong",[t._v("跨会话 跨站点")]),t._v("的情况下使用")]),t._v(" "),e("p",[t._v("自动清除会把最老的,最可能过时的资源删除,但是每个浏览器的删除算法不一样")]),t._v(" "),e("h3",{attrs:{id:"强缓存-协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-协商缓存"}},[t._v("#")]),t._v(" 强缓存 协商缓存")]),t._v(" "),e("p",[t._v("强缓存也叫强制缓存, memory cache 和 disk cache 都属于强缓存")]),t._v(" "),e("p",[t._v("协商缓存也叫对比缓存,和没有缓存的请求数是一样的,区别是没有响应内容,状态码为 304,和没有缓存相比减少了响应时间")]),t._v(" "),e("p",[t._v("强缓存和协商缓存一般是一起出现的,协商缓存是作为强缓存失效之后的备选方案")]),t._v(" "),e("p",[t._v("Cache-Control 与 Expires 同时存在的话,Cache-Control 的优先级高于 Expires,只要没有过期就算命中强缓存")]),t._v(" "),e("h4",{attrs:{id:"优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),e("p",[t._v("Cache-Control > expires > Etag > Last-Modified")]),t._v(" "),e("p",[e("mark",[t._v("etag 是用来替代 last-modified 的")])]),t._v(" "),e("p",[e("mark",[t._v("Cache-Control 是用来替代 expires 的")])]),t._v(" "),e("p",[t._v("Cache-Control(可以混合使用)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("no-cache")]),t._v(" 不使用本地缓存。需要使用协商缓存")]),t._v(" "),e("li",[e("code",[t._v("no-store")]),t._v(" "),e("mark",[t._v("直接禁止浏览器缓存数据")]),t._v("，每次请求资源都会向服务器要完整的资源， 类似于 "),e("code",[t._v("network")]),t._v(" 中的 "),e("code",[t._v("disabled cache")])]),t._v(" "),e("li",[e("code",[t._v("public")]),t._v(" 可以被所有用户缓存，包括终端用户和 cdn 等中间件代理服务器")]),t._v(" "),e("li",[e("code",[t._v("private")]),t._v(" 只能被终端用户的浏览器缓存")]),t._v(" "),e("li",[t._v("max-age=0 "),e("mark",[t._v("不要在下次浏览时使用")])])]),t._v(" "),e("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220707184854833.png",alt:"image-20220707184854833"}}),t._v(" "),e("h4",{attrs:{id:"协商缓存-etag-比-last-modified-优先级更高的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-etag-比-last-modified-优先级更高的原因"}},[t._v("#")]),t._v(" 协商缓存 Etag 比 last-modified 优先级更高的原因")]),t._v(" "),e("ol",[e("li",[t._v("一些文件也许会周期性的更改,但是他的内容并不改变(仅仅改变的修改时间),这个时候,我们并不希望客户端认为这个文件被修改了,而重新 get")]),t._v(" "),e("li",[t._v("某些文件修改非常频繁,比如在秒以下的时间内进行修改(比方说 1s 内修改了 N 次),If-Modified-Since 能检查到的粒度时 s 级的,这种修改无法判断(或者说 UNIX 记录 MTIME 只能精确到秒)")]),t._v(" "),e("li",[t._v("某些服务器不能精确得到的文件的最后修改时间")])]),t._v(" "),e("img",{staticStyle:{zoom:"40%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220621125445140.png",alt:"image-20220621125445140"}}),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220621131408934.png",alt:"image-20220621131408934"}}),t._v(" "),e("p",[t._v("所有请求都有可能被缓存(包括 ajax)避免缓存的最好办法是在请求的 url 后面加上时间戳")]),t._v(" "),e("h3",{attrs:{id:"组件封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件封装"}},[t._v("#")]),t._v(" 组件封装")]),t._v(" "),e("p",[t._v("基础组件 功能组件 业务组件")]),t._v(" "),e("p",[t._v("约定大于配置")]),t._v(" "),e("p",[t._v("单一原则 开闭原则")]),t._v(" "),e("h3",{attrs:{id:"jsbridge-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsbridge-原理"}},[t._v("#")]),t._v(" jsBridge 原理")]),t._v(" "),e("p",[t._v("jsBridge 分为 2 种 传统的 hybrid(类似 wx jssdk)和 RN 具体包括 2 方面 js 调 native 和 native 调 js,属于双向通信 其中 js 调 native 是 native 通过 webview 提供的接口向 javascript 的 context (window）中注入对象或者方法然后调用实现,还有一种不常用的方式是 native 拦截 url scheme ; native 调 js 通过回调句柄实现类似前端跨域的 jsonp js 先将 callbackId 传给 native,native 收到信息处理完成之后回传 callbakId 和 data 实现 native 调用 js , ios 和安卓也有不同,其中 js 调用 native 是通过 webviewJavascriptBridge.postmessage 而 android 则是 prompt native 调用 js ios 和安卓一样")]),t._v(" "),e("p",[t._v("Native 调用 js 更简单,不管是 iOs 的 UIWebView 还是 WKWebView,还是 Android 的 WebView 组件，都以子组件的形式存在于 View/Activity 中,直接调用相应的 API 即可,原理就是执行拼接 JavaScript 字符串，从外部调用 JavaScript 中的方法，因此 Javascript 的方法必领在全局的 window 上")]),t._v(" "),e("h3",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000016708006",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 的 6 种继承模式"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000037460216?utm_source=sf-similar-article",target:"_blank",rel:"noopener noreferrer"}},[t._v("常见的 js 继承 7 种方式"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6844903929470271501",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金-函数传值是按照值传递"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/frontend9/fe9-interview/issues/29",target:"_blank",rel:"noopener noreferrer"}},[t._v("强缓存和协商缓存"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.mashibing.cn/good/",target:"_blank",rel:"noopener noreferrer"}},[t._v("马士兵-面试简历"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/44789005",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎-一文读懂前端缓存"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("webpack-dev-middleware")]),t._v(" "),e("p",[t._v("webpack-hot-middleware")]),t._v(" "),e("p",[t._v("express")]),t._v(" "),e("p",[t._v("extract-text-webpack-plugin")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);