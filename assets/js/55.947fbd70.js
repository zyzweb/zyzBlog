(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{497:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"基础架构发展史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础架构发展史"}},[t._v("#")]),t._v(" 基础架构发展史")]),t._v(" "),s("ul",[s("li",[t._v("90 年代是传统服务器；")]),t._v(" "),s("li",[t._v("2000 年开始流行虚拟化技术;(VMware virtualbox)")]),t._v(" "),s("li",[t._v("2005 年-2015 年云技术 Cloud 开始流行；")]),t._v(" "),s("li",[t._v("2015 年以后 Container(容器) 时代 (docker)")]),t._v(" "),s("li")]),t._v(" "),s("h3",{attrs:{id:"基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),s("p",[t._v("镜像 容器 仓库")]),t._v(" "),s("p",[t._v("镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例")]),t._v(" "),s("p",[t._v("仓库用来储存镜像")]),t._v(" "),s("h3",{attrs:{id:"https-hub-docker-com-类似-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-hub-docker-com-类似-github"}},[t._v("#")]),t._v(" https://hub.docker.com/ 类似 github")]),t._v(" "),s("h3",{attrs:{id:"docker-切换国内源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-切换国内源"}},[t._v("#")]),t._v(" docker 切换国内源")]),t._v(" "),s("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://image.zhuyuanzheng.top/image-20220608230235173.png",alt:"image-20220608230235173"}}),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将下面的配置添加到上面,然后重启docker")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors  获取阿里云dock加速地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"experimental"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" false,\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://docker.mirrors.ustc.edu.cn"')]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://hub-mirror.c.163.com"')]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://vs83pkv4.mirror.aliyuncs.com"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#linux换源  或者在宝塔面板软件管理操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/docker/daemon.json  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#复制如下内容:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirror.ccs.tencentyun.com"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启docker")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" info "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看换源是否成功")]),t._v("\n")])])]),s("h2",{attrs:{id:"路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径"}},[t._v("#")]),t._v(" 路径")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("/Users/zhuyuanzheng/Library/Containers/com.docker.docker/Data/vms/0  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器 镜像的存储地址  (mac)")]),t._v("\n/var/lib/docker/overlay2  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#镜像地址  (linux)")]),t._v("\n")])])]),s("h2",{attrs:{id:"docker-常用命令行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令行"}},[t._v("#")]),t._v(" docker 常用命令行")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Ctrl + d /exit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#退出当前容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出本机所有镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看容器是否在运行及其他状态  running/Up 运行中  exited  停止")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有docker容器(包括已经停止的)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" logs  2b1b7a428627  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在宿主机查看容器日志输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" stop  2b1b7a428627  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull ubuntu "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#载入镜像  docker pull whyour/qinglong:2.10.6 拉取指定镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull docker.fe.jyb.com/jfet\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" 9b302e5d383c /bin/bash   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入容器(退出不会导致容器退出)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看某个命令的帮助说明,其他命令行也类似   用exit退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" port cafb276b7800   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看指定容器的端口映射情况")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" search mysql   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#搜索镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-aq")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除所有容器 -aq就是-a -q 类似 -am(git提交) 要先停止才能删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" stop "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-aq")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止所有容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" rmi 9873176a8ff5   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除镜像(通过镜像id)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--rm")]),t._v("  ubuntu  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" etc/resolv.conf  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看ubuntu容器的dns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#退出系统  先按，ctrl+p   再按，ctrl+q")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" ubuntu /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#登陆docker中的ubuntu镜像系统  === docker run -t -i ubuntu bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" nginx-test "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":80 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" nginx  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以name为nginx-test,本地8080端口代理容器80端口,在后台启动容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" start  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动docker服务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" info "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker详细信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" f3997beedeb4  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看容器PID UID信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" volume "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker 卷")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker-compose 命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更新镜像(要切换到指定文件夹)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动并运行整个应用程序(在后台) 启动的是当前目录对应的docker-compose.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker-compose版本")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Docker Hub相关")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#登录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" push zhuzhudashen/ubuntu:v44   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将自己的镜像推送到远端")]),t._v("\n\n")])])]),s("p",[t._v("docker-compose 命令可以调用 dockerfile 和 docker-compose.yml 运行多个容器")]),t._v(" "),s("p",[t._v("docker compose 命令代替了手写 docker 的各个步骤")]),t._v(" "),s("h3",{attrs:{id:"dockerfile-命令摘要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-命令摘要"}},[t._v("#")]),t._v(" Dockerfile 命令摘要")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("FROM- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#镜像从那里来")]),t._v("\nMAINTAINER- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#镜像维护者信息")]),t._v("\nRUN- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#构建镜像执行的命令，每一次RUN都会构建一层")]),t._v("\nCMD- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动的命令，如果有多个则以最后一个为准，也可以为ENTRYPOINT提供参数")]),t._v("\nVOLUME- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数据卷，如果没有定义则使用默认")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定后续执行的用户组和用户")]),t._v("\nWORKDIR- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#切换当前执行的工作目录")]),t._v("\nHEALTHCHECH- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#健康检测指令")]),t._v("\nARG- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变量属性值，但不在容器内部起作用")]),t._v("\nEXPOSE- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暴露端口")]),t._v("\nENV- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变量属性值，容器内部也会起作用")]),t._v("\nADD- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加文件，如果是压缩文件也解压")]),t._v("\nCOPY- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加文件，以复制的形式")]),t._v("\nENTRYPOINT- "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器进入时执行的命令")]),t._v("\n")])])]),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gitlab/gitlab-ce:latest'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'47.107.149.52'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#改成你部署的服务器(宿主机)的固定ip地址")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITLAB_OMNIBUS_CONFIG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      external_url 'http://47.107.149.52'\n      # Add any other gitlab.rb configuration here, each on its own line")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5678:80'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#映射到本机的80端口防止端口占用 访问地址就是http://47.107.149.52")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7443:443'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#映射宿主机的文件目录到运行的镜像里面 保证镜像的重启等不会造成数据的丢失")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/data/gitlab/config:/etc/gitlab'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/data/gitlab/logs:/var/log/gitlab'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/data/gitlab/data:/var/opt/gitlab'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab-runner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitlab/gitlab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unless"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("stopped\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /data/runner/gitlab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/gitlab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/docker.sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/run/docker.sock "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#宿主机机的docker.sock映射到镜像里面")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/bin/docker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/bin/docker "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#宿主机的docker可执行映射到镜像里面 后面build的时候会用到")]),t._v("\n")])])]),s("p",[t._v("进入 gitlab 文件夹里面启动 docker")]),t._v(" "),s("p",[t._v("卡住 重启系统 结束进程")]),t._v(" "),s("h3",{attrs:{id:"将下面的配置添加到上面-然后重启-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将下面的配置添加到上面-然后重启-docker"}},[t._v("#")]),t._v(" 将下面的配置添加到上面,然后重启 docker")]),t._v(" "),s("p",[t._v('#https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors 获取阿里云 dock 加速地址 { "debug": true, "experimental": false, "registry-mirrors": [ "https://docker.mirrors.ustc.edu.cn", "https://hub-mirror.c.163.com", "https://vs83pkv4.mirror.aliyuncs.com" ] }')]),t._v(" "),s("p",[t._v("linux 安装 docker")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-fsSL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get.docker.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://get.docker.com/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get-docker.sh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://get-docker.sh/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下载安装文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get-docker.sh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://get-docker.sh"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装docker")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" version "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker版本")]),t._v("\nsystemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动docker(客户端 服务端)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container run nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装nginx容器 没有会去docker hub安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有容器(只有打开的容器) docker container ls -a  查看全部容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container stop 3e "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" jfet:latest "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#构建镜像 . Dockfile所在的目录  t指定镜像名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image save nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" ngingx.image  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#导出镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image load "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" ./nginx.image "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#导入镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" 3e  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看镜像的层数")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#同个镜像跑多个容器,或者一个容器一个容器开")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker-compose.yml")]),t._v("\n\nversion: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),t._v("\nservices:\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##第一个青龙")]),t._v("\n  q1:\n    image: whyour/qinglong:2.10.6\n    container_name: ql1\n    restart: always\n    volumes:\n       - ./ql1/config:/ql/config\n       - ./ql1/scripts:/ql/scripts\n       - ./ql1/repo:/ql/repo\n       - ./ql1/log:/ql/log\n       - ./ql1/db:/ql/db\n       - ./ql1/jbot:/ql/jbot\n       - ./ql1/raw:/ql/raw\n    ports:\n       - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5801")]),t._v(":5700\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##第二个青龙")]),t._v("\n  q2:\n    image: whyour/qinglong:latest\n    container_name: ql2\n    restart: always\n    volumes:\n       - ./ql2/config:/ql/config\n       - ./ql2/scripts:/ql/scripts\n       - ./ql2/repo:/ql/repo\n       - ./ql2/log:/ql/log\n       - ./ql2/db:/ql/db\n       - ./ql2/jbot:/ql/jbot\n       - ./ql2/raw:/ql/raw\n    ports:\n       - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5802")]),t._v(":5700\n")])])]),s("p",[t._v("windows 和 mac 安装自带了,linux 需要自行安装,有命令和 yml 文件")]),t._v(" "),s("h3",{attrs:{id:"导入-image-的-3-种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入-image-的-3-种方式"}},[t._v("#")]),t._v(" 导入 image 的 3 种方式")]),t._v(" "),s("ol",[s("li",[t._v("pull from registry "),s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("hub.docker.com"),s("OutboundLink")],1),t._v(" https://quay.io/")]),t._v(" "),s("li",[t._v("Dockfile online")]),t._v(" "),s("li",[t._v("自有文件导入")])]),t._v(" "),s("p",[t._v("gitlab 管理员账号密码 root secret_pass")]),t._v(" "),s("h3",{attrs:{id:"查看-docker-网桥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看-docker-网桥"}},[t._v("#")]),t._v(" 查看 docker 网桥")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"http://image.zhuyuanzheng.top/image-20220425133215694.png",alt:"image-20220425133215694"}})]),t._v(" "),s("h3",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启docker失败")]),t._v("\nsystemctl reset-failed "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#关闭")]),t._v("\nsystemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动")]),t._v("\n")])])]),s("h3",{attrs:{id:"容器代理-分-2-种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器代理-分-2-种"}},[t._v("#")]),t._v(" 容器代理(分 2 种)")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("容器用 docker 内的代理")])]),t._v(" "),s("li",[s("p",[t._v("容器用 docker 外的代理")])])]),t._v(" "),s("h3",{attrs:{id:"容器连接-包括-2-种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器连接-包括-2-种"}},[t._v("#")]),t._v(" 容器连接(包括 2 种)")]),t._v(" "),s("ol",[s("li",[t._v("通过端口映射,容器外可以访问容器内")]),t._v(" "),s("li",[t._v("创建一个网络,将不同容器和网络进行连接")])]),t._v(" "),s("h3",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/daqiang012/article/details/118765409",target:"_blank",rel:"noopener noreferrer"}},[t._v("修改 docker 中 gitlab 的 root 账号的密码"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000040801945",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab-ci 入门"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844904185079545863",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker 部署 gitlab"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844903984554049544",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker 部署 gitlab2"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1718368",target:"_blank",rel:"noopener noreferrer"}},[t._v("搭建私有 docker 库"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://blog.csdn.net/guorui_java/article/details/115187780?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-12-115187780-null-null.pc_agg_new_rank&utm_term=docker%E5%90%AF%E5%8A%A8%E9%95%9C%E5%83%8F%E4%BD%86%E6%98%AF%E6%B2%A1%E6%9C%89%E7%AB%AF%E5%8F%A3&spm=1000.2123.3001.4430",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker 容器启动后修改或添加端口"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/mengw/p/11413461.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker 安装 ubuntu 以及 ssh 连接"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -dit \\\n  -v $PWD/ql:/ql/data \\\n  -p 5701:5700 \\\n  --name qinglong \\\n  --hostname qinglong \\\n  --restart unless-stopped \\\n  whyour/qinglong:2.10.12\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -dit \\\n  -v $PWD/ql1/config:/ql/config \\\n  -v $PWD/ql1/log:/ql/log \\\n  -v $PWD/ql1/db:/ql/db \\\n  -v $PWD/ql1/repo:/ql/repo \\\n  -v $PWD/ql1/raw:/ql/raw \\\n  -v $PWD/ql1/scripts:/ql/scripts \\\n  -v $PWD/ql1/jbot:/ql/jbot \\\n  -v $PWD/ql1/deps:/ql/deps \\\n  -p 5703:5700\\\n  --name ql1 \\\n  --hostname ql1 \\\n  --restart unless-stopped \\\n  whyour/qinglong:2.10.12\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);