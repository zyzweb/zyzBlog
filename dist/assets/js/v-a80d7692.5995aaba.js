(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[8170],{1074:(s,t,e)=>{"use strict";e.r(t),e.d(t,{data:()=>a});const a={key:"v-a80d7692",path:"/doc/git.html",title:"git",lang:"zh",frontmatter:{},excerpt:"",headers:[{level:2,title:"git stash(切换分支隐藏未提交)",slug:"git-stash-切换分支隐藏未提交",children:[]},{level:2,title:"只对github设置代理",slug:"只对github设置代理",children:[{level:3,title:"git设置代理",slug:"git设置代理",children:[]},{level:3,title:"git取消代理",slug:"git取消代理",children:[]},{level:3,title:"http提交不用输入密码",slug:"http提交不用输入密码",children:[]}]},{level:2,title:"常见报错",slug:"常见报错",children:[]},{level:2,title:"同一个仓库设置2个远程仓库",slug:"同一个仓库设置2个远程仓库",children:[]},{level:2,title:"查看git配置信息",slug:"查看git配置信息",children:[]},{level:2,title:"设置别名alias",slug:"设置别名alias",children:[]},{level:2,title:"Github 在线看代码",slug:"github-在线看代码",children:[]}],filePathRelative:"doc/git.md",git:{updatedTime:1630769538e3,contributors:[{name:"zhuyuanzheng",email:"yuanzheng.zhu@jyblife.com",commits:5}]}}},9201:(s,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>n});const a=(0,e(6252).uE)('<h1 id="git"><a class="header-anchor" href="#git">#</a> git</h1><p>git merge 和 git rebase区别</p><p>1.初始</p><p><img src="https://gitee.com/zyzcode/gitee-pic/raw/master/image-20210618204542391.png" alt="image-20210618204542391"></p><ol start="2"><li>在master执行git merge tmp</li></ol><p><img src="https://gitee.com/zyzcode/gitee-pic/raw/master/image-20210618204623643.png" alt="image-20210618204623643"></p><ol start="3"><li>在master执行git rebase tmp</li></ol><p><img src="https://gitee.com/zyzcode/gitee-pic/raw/master/image-20210618204744894.png" alt="image-20210618204744894"></p><h2 id="git-stash-切换分支隐藏未提交"><a class="header-anchor" href="#git-stash-切换分支隐藏未提交">#</a> git stash(切换分支隐藏未提交)</h2><ol><li>用 git stash apply恢复，但是恢复后，stash 内容并不删除，需要用 git stash drop来删除；</li><li>用 git stash pop，恢复的同时把stash内容也删了，这时候用 git stash list就看不到任何 stash 内容了</li><li>可以多次 stash ，恢复的时候，先用 <strong>git stash list</strong>查看，然后用 git stash apply stash@{0}或者 git stash pop stash@{0}恢复指定的stash</li></ol><h2 id="只对github设置代理"><a class="header-anchor" href="#只对github设置代理">#</a> 只对github设置代理</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#只对github.com</span>\n<span class="token function">git</span> config --global http.https://github.com.proxy socks5://127.0.0.1:7890\n\n<span class="token comment">#取消代理</span>\n<span class="token function">git</span> config --global --unset http.https://github.com.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git设置代理"><a class="header-anchor" href="#git设置代理">#</a> git设置代理</h3><p>git config --global http.proxy http://127.0.0.1:7890</p><p>git config --global https.proxy https://127.0.0.1:7890</p><h3 id="git取消代理"><a class="header-anchor" href="#git取消代理">#</a> git取消代理</h3><p>git config --global --unset http.proxy</p><p>git config --global --unset https.proxy</p><p><strong>socks5不支持通过pubkey免密登录github，每次提交代码只能输入用户名和密码。http可以支持免密登录。</strong></p><h3 id="http提交不用输入密码"><a class="header-anchor" href="#http提交不用输入密码">#</a> http提交不用输入密码</h3><h4 id="方式一-修改当前仓库-git-config中url-https-账号-密码-github-com-zyzweb-koa-server-proxy-git-再提交就发现不要输入密码了"><a class="header-anchor" href="#方式一-修改当前仓库-git-config中url-https-账号-密码-github-com-zyzweb-koa-server-proxy-git-再提交就发现不要输入密码了">#</a> 方式一:修改当前仓库.git/config中url = https://账号:密码@github.com/zyzweb/koa-server-proxy.git<code> ,再提交就发现不要输入密码了；</code></h4><h4 id="方式二-直接在克隆仓库的时候直接-git-clone-https-账号-密码-github-com-zyzweb-koa-server-proxy-git-这样下次提交时也不需要输入密码。"><a class="header-anchor" href="#方式二-直接在克隆仓库的时候直接-git-clone-https-账号-密码-github-com-zyzweb-koa-server-proxy-git-这样下次提交时也不需要输入密码。">#</a> 方式二: 直接在克隆仓库的时候直接 <code>git clone https://账号:密码@github.com/zyzweb/koa-server-proxy.git</code> ，这样下次提交时也不需要输入密码。</h4><h2 id="常见报错"><a class="header-anchor" href="#常见报错">#</a> 常见报错</h2><p><img src="https://gitee.com/zyzcode/gitee-pic/raw/master/image-20210624155501618.png" alt="image-20210624155501618"></p><p>取消代理即可</p><p>git config --global --unset http.proxy</p><p>git config --global --unset https.proxy</p><h2 id="同一个仓库设置2个远程仓库"><a class="header-anchor" href="#同一个仓库设置2个远程仓库">#</a> 同一个仓库设置2个远程仓库</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">rm</span> origin  <span class="token comment">#删除远程仓库</span>\n<span class="token function">git</span> remote <span class="token function">add</span> github https://github.com/zyzweb/zyzBlog.git  <span class="token comment">#添加github仓库</span>\n<span class="token function">git</span> remote <span class="token function">add</span> gitee https://gitee.com/zyzcode/zyzBlog.git  <span class="token comment">#添加gitee仓库</span>\n<span class="token function">git</span> remote -v  <span class="token comment">#查看最终结果</span>\ngitee\thttps://gitee.com/zyzcode/zyzBlog.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>\ngitee\thttps://gitee.com/zyzcode/zyzBlog.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span>\ngithub\thttps://github.com/zyzweb/zyzBlog.git <span class="token punctuation">(</span>fetch<span class="token punctuation">)</span>\ngithub\thttps://github.com/zyzweb/zyzBlog.git <span class="token punctuation">(</span>push<span class="token punctuation">)</span>\n<span class="token comment">#git add /commit保持一致  git push 分开提交</span>\n<span class="token function">git</span> push github master\n<span class="token function">git</span> push gitee master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="查看git配置信息"><a class="header-anchor" href="#查看git配置信息">#</a> 查看git配置信息</h2><p>查看系统config</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git config --system --list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>查看当前用户（global）配置</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git config --global --list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查看当前仓库配置信息</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git config -- local --list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="设置别名alias"><a class="header-anchor" href="#设置别名alias">#</a> 设置别名alias</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> config --global alias.here <span class="token string">&#39;!git init &amp;&amp; git add . &amp;&amp; git commit -m &quot;init &quot;&#39;</span> <span class="token comment">#初始化项目</span>\n<span class="token function">git</span> config --global alias.logs <span class="token string">&quot;log --graph --pretty=format:&#39;%C(yellow)%h%Creset -%Cred%d%Creset %s %Cgreen| %cr %C(bold blue)| %an%Creset&#39; --abbrev-commit --date=relative&quot;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="github-在线看代码"><a class="header-anchor" href="#github-在线看代码">#</a> Github 在线看代码</h2><p>https://github.dev/zyzweb/zyzBlog</p><p>https://github1s.com/zyzweb/zyzBlog</p>',42),n={render:function(s,t){return a}}}}]);