(self.webpackChunkvuepress_blog=self.webpackChunkvuepress_blog||[]).push([[1985],{9028:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-aca73e94",path:"/doc/%E6%80%BB%E7%BB%93.html",title:"总结",lang:"zh",frontmatter:{},excerpt:"",headers:[{level:2,title:"Css",slug:"css",children:[]},{level:2,title:"关闭跨域",slug:"关闭跨域",children:[]},{level:2,title:"自定义事件模拟js手动输入",slug:"自定义事件模拟js手动输入",children:[]},{level:2,title:"jfet server端口",slug:"jfet-server端口",children:[]},{level:2,title:"raw.githubusercontent.com 连接不上",slug:"raw-githubusercontent-com-连接不上",children:[]},{level:2,title:"调试",slug:"调试",children:[]},{level:2,title:"google调试",slug:"google调试",children:[]},{level:2,title:"全面屏问题",slug:"全面屏问题",children:[]},{level:2,title:"字体设置(字重：400—常规、 600—中粗、700—超粗)",slug:"字体设置-字重-400—常规、-600—中粗、700—超粗",children:[]},{level:2,title:"mock平台",slug:"mock平台",children:[{level:3,title:"跳转视口",slug:"跳转视口",children:[]},{level:3,title:"dayjs",slug:"dayjs",children:[]},{level:3,title:"支付相关",slug:"支付相关",children:[]},{level:3,title:"better-scroll相关问题:",slug:"better-scroll相关问题",children:[]},{level:3,title:"API相关概念",slug:"api相关概念",children:[]}]}],filePathRelative:"doc/总结.md",git:{updatedTime:1630764086e3,contributors:[{name:"zhuyuanzheng",email:"yuanzheng.zhu@jyblife.com",commits:8}]}}},9120:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="总结"><a class="header-anchor" href="#总结">#</a> 总结</h1><h2 id="css"><a class="header-anchor" href="#css">#</a> Css</h2><p>css气泡 http://www.shouce.ren/example/show/s/6896</p><p>Flex-direction:column 之后 justify-content和align-items 换了</p><p>图片有白边,可能是背景色造成的</p><p>先是未吸顶,滑动过程在吸顶</p><p>未吸顶 opacity:0 ,吸顶 opacity: 1</p><p>用i标签一定要注意字体的倾斜font-style: normal;</p><p>元素不显示,可能是overflow:hidden</p><p>伪元素要加上conten属性,display要为block 或 inline-block</p><p>阴影都自己加,ps导出png选择fx为阴影</p><p>background-size: 100% 100%;</p><p>Css优先级顺序</p><p>!important &gt; 内联样式(标签上得style上的属性) &gt; 选择器设置样式 （css文件，style标签）&gt; 浏览器默认样式 &gt; 继承样式</p><p>background-color与background-img共存时,background-color要放在最后</p><p>network 过滤插件请求</p><p>将node-sass转换成dart-sass</p><p>npm i node-sass@npm:dart-sass</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">//子元素横向排列，超过父容器宽度不换行</span>\n<span class="token selector">方法一:\nul</span><span class="token punctuation">{</span>\n <span class="token property">overflow-x</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>\n <span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span>\n <span class="token property">font-size</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">li</span><span class="token punctuation">{</span>\n <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">方法二:\nul</span><span class="token punctuation">{</span>\n <span class="token property">overflow-x</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>\n <span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">li</span><span class="token punctuation">{</span>\n <span class="token property">flex-shrink</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>pointer-events：none，禁用了包括hover在内的鼠标事件，从而提高滚动性能</p><p>substr 截取长度 substring截取索引 slice截取string和Array都是截取索引</p><p>图片和文字在一起,文字会在底部</p><p>要居中:</p><p>1.图片用background</p><p>2.图片和文字用float:left</p><p>3.图片和文字都用vertical-align:middle;(ios有问题)</p><p>ackground-image: linear-gradient(0deg, #f0f1f5 0%, #688FFD 100%);</p><p>边框问题 boder-radius配合over-flow:hidden</p><p>父级元素 position:relative</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector"><span class="token parent important">&amp;</span>::before </span><span class="token punctuation">{</span>\n<span class="token keyword">@include</span> <span class="token function">setBottomLine</span><span class="token punctuation">(</span>#eee<span class="token punctuation">)</span><span class="token punctuation">;</span>  \n  <span class="token keyword">@include</span> <span class="token function">border</span><span class="token punctuation">(</span>#eee<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 设置上下边框</span>\n<span class="token selector"><span class="token parent important">&amp;</span>::before </span><span class="token punctuation">{</span>\n  <span class="token keyword">@include</span>  <span class="token function">setTopLine</span><span class="token punctuation">(</span>#E9EEF5<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token parent important">&amp;</span>:last-child::after </span><span class="token punctuation">{</span>\n  <span class="token keyword">@include</span>  <span class="token function">setBottomLine</span><span class="token punctuation">(</span>#E9EEF5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">input::-webkit-input-placeholder</span><span class="token punctuation">{</span>\n<span class="token keyword">@include</span> <span class="token function">fontFamily</span><span class="token punctuation">(</span><span class="token string">&#39;PingFangSC-Medium&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.20<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Background-color 写在前面 background-image写后面才能同时生效</p><p>兼容性布局 320(iphone5) 360 375 414</p><p>chrome分别设置</p><p>多用 nth-of-type 最后一个元素 nth-last-of-type(1)</p><p>App.vue style scope deep &gt; 父组件style scope deep &gt; 子组件style scope deep &gt; App.vue style &gt; 父组件 style &gt; 子组件 style &gt; App.vue中的common.scss</p><p>不过背景色和边框必须要margin设置作用范围</p><p>除了字体大小和边框以外都用rem</p><p>-webkit-overflow-scrolling: touch; //ios平滑滚动</p><p>Wk-paewkwebviewcontroller</p><p>git update-index --assume-unchanged src/module/KDEanalysisReport/view/tradePolicy/test.vue</p><p>git update-index --no-assume-unchanged</p><p>git commit --amend 进入vim 修改</p><p>日期上一周下一周要注意,js是从周日开始算的第一天</p><p>可以考虑一下接口数据返回多和少的情况,数据多了删除,少了添加(让前端更稳定)</p><p>接受数据前,假设任何人都是不可信的,多考虑一些特殊情况</p><h2 id="关闭跨域"><a class="header-anchor" href="#关闭跨域">#</a> 关闭跨域</h2><p>cd ~</p><p>open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security --user-data-dir=/Users/zhuyuanzheng/MyChromeDevUserData/</p><p>过去回来都用replace</p><p>this.$once(<strong>&#39;hook:beforeDestroy</strong>’,<strong>callback</strong>)</p><p>Nohost 基于 Whistle</p><p>interface_env</p><p>http://lego.jyblife.com)</p><h2 id="自定义事件模拟js手动输入"><a class="header-anchor" href="#自定义事件模拟js手动输入">#</a> 自定义事件模拟js手动输入</h2><p>![image-20210605165935304](/Users/zhuyuanzheng/Library/Application Support/typora-user-images/image-20210605165935304.png)</p><h2 id="jfet-server端口"><a class="header-anchor" href="#jfet-server端口">#</a> jfet server端口</h2><p>@jyb/jfet-server/lib/index.js</p><h2 id="raw-githubusercontent-com-连接不上"><a class="header-anchor" href="#raw-githubusercontent-com-连接不上">#</a> raw.githubusercontent.com 连接不上</h2><p>开全局代理不行</p><p>https://www.ipaddress.com/ 在这个网站找到最优ip</p><p>sudo vim /etc/hosts 进host修改就可以了</p><h2 id="调试"><a class="header-anchor" href="#调试">#</a> 调试</h2><p>1.安卓调试生产</p><p>加油宝测试版环境修改为线上环境,即可调试生产</p><p>2.安卓调试本地</p><ul><li>加油宝测试版,进入google调试模式,在地址栏中输入本地地址(注意:wifi要保持一致)</li><li>用vconsole location.href赋值</li></ul><h2 id="google调试"><a class="header-anchor" href="#google调试">#</a> google调试</h2><p>代理选择手动, 插件选择proxy</p><p>手机开启开发人员选项</p><p>打开USB调试和连接USB时总是弹出提示</p><h2 id="全面屏问题"><a class="header-anchor" href="#全面屏问题">#</a> 全面屏问题</h2><p>首先全面屏和非全面屏分为容器和页面,全屏容器要匹配全屏页面,非全屏容器要匹配非全屏页面。全面屏容器直接跳转原始url(https://www.baidu.com)也是全面屏容器,需要加jtjr非全面屏链接才是非全面屏容器,非全面屏容器直接跳转原始链接(https://www.baidu.com)也是非全面屏容器,需要加jtjr全面屏链接才是全面屏容器</p><h2 id="字体设置-字重-400—常规、-600—中粗、700—超粗"><a class="header-anchor" href="#字体设置-字重-400—常规、-600—中粗、700—超粗">#</a> 字体设置(字重：400—常规、 600—中粗、700—超粗)</h2><div class="language-armasm ext-armasm line-numbers-mode"><pre class="language-armasm"><code>body {\n  font-family: &quot;PingFang SC&quot;, -apple-system, BlinkMacSystemFont, Roboto, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Hiragino Sans GB&quot;, &quot;Source Han Sans&quot;, &quot;Noto Sans CJK Sc&quot;, &quot;Microsoft YaHei&quot;, &quot;Microsoft Jhenghei&quot;, sans-serif;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="mock平台"><a class="header-anchor" href="#mock平台">#</a> mock平台</h2><p>json-serve fast mock easy mock</p><p>https://github.com/DXY-F2E/api-mocker</p><p>隐藏带有index的列表,用v-show,可能调用不同接口,代码通过文字判断调用接口</p><h3 id="跳转视口"><a class="header-anchor" href="#跳转视口">#</a> 跳转视口</h3><p>element.scrollIntoView()</p><h3 id="dayjs"><a class="header-anchor" href="#dayjs">#</a> dayjs</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> dayjs <span class="token keyword">from</span><span class="token string">&#39;dayjs&#39;</span>\n<span class="token keyword">import</span> weekOfYear <span class="token keyword">from</span> <span class="token string">&#39;dayjs/plugin/weekOfYear&#39;</span>\ndayjs<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>weekOfYear<span class="token punctuation">)</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">week</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//现在是当前的第几周</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;2021-01-08&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">week</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//指定日期是第几周</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;2020-12-28&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">week</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//对应星期一的第3周 2021-01-11</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//获取当前日期是星期几</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">//设置当前日期所在周的周一</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment">//设置当前日期所在周的周日</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;day&#39;</span><span class="token punctuation">)</span> <span class="token comment">//前7天</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;day&#39;</span><span class="token punctuation">)</span> <span class="token comment">//后7天</span>\n\n#特别情况\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;20210704&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment">// 20210711</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;20210705&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// 20210705</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;20210704&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">week</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//28</span>\n<span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token string">&#39;20210705&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">week</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//28</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*登录注册*/</span>\n<span class="token selector">input</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 0.88rem<span class="token punctuation">;</span>\n        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n        <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n        <span class="token property">background</span><span class="token punctuation">:</span> #F2F2F2<span class="token punctuation">;</span>\n        <span class="token property">border-radius</span><span class="token punctuation">:</span> .44rem<span class="token punctuation">;</span>\n        <span class="token property">font-size</span><span class="token punctuation">:</span> 0.28rem<span class="token punctuation">;</span>\n        <span class="token property">font-family</span><span class="token punctuation">:</span> PingFang SC<span class="token punctuation">;</span>\n        <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>\n        <span class="token property">text-indent</span><span class="token punctuation">:</span> .4rem<span class="token selector">;\n        &amp;::placeholder</span> <span class="token punctuation">{</span>\n          <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>一个list用多个数组进行渲染</p><p>重新刷新列表的问题</p><p>点击之后在调接口</p><p>多个不同弹窗写在一个dialog里面</p><h3 id="支付相关"><a class="header-anchor" href="#支付相关">#</a> 支付相关</h3><p>1.进入页面获取openId</p><ol start="2"><li>调用注册码接口</li><li>调用注册接口获取注册人userid和token并且判断新老用户</li><li>payType, openId,调用订单接口生成orderId</li><li>将生成的orderId,payAmount,pay_rule,传入payjs(前端封装的微信支付sdk)</li></ol><p>支付分为内部支付和外部支付</p><p>内部支付只需要orderId就可以调用jsapi(native提供)进行支付</p><h3 id="better-scroll相关问题"><a class="header-anchor" href="#better-scroll相关问题">#</a> better-scroll相关问题:</h3><h4 id="无法滚动"><a class="header-anchor" href="#无法滚动">#</a> 无法滚动</h4><p>[打印better-scroll对象]((https://gitee.com/zyzcode/gitee-pic/raw/master/image-20210816103830757.png)</p><p>需满足wrapperHeight(616) &lt; scrollHeight(750)，hasVerticalScroll为true；</p><p>hasVerticalScroll为false,说明初始化有问题,需在dom更新之后在初始化,点击才展示的要在点击之后在初始化</p><p>wrapper元素需设置 overflow: hidden;</p><p>移动端滚动分页组件(使用better-scroll pull-up 上拉加载)</p><p>1.不能同时发多个请求</p><p>设置一个状态(防重复点击),上一个请求完成了才能发下个请求</p><p>2.用concat拼接,之前的数据放在前面</p><p>3.每次请求结束,page(页码)+1,每次进行请求之前判断如果当前页码 &gt;= 总页码 + 1且总页码不能为0 就return</p><p>4.better-scroll，默认会阻止浏览器的原生click事件，如果滚动内容区要添加点击事件，需要在实例化属性里设置<strong>click:true</strong></p><p>5.上拉要先finishPullUp,然后refresh</p><p>样式兼容性测试 320/360/375/414</p><h3 id="api相关概念"><a class="header-anchor" href="#api相关概念">#</a> API相关概念</h3><p>SOAP(Simple Object Access Protocol) 简单对象存取协议,传递格式为xml</p><p>REST(REpresentational State Transfer) 表述性状态转移,传递格式为json</p><p>GraphQL是由Facebook开发,为最新的api类型,可以简化api调用次数</p><p><strong>OpenAPI</strong>规范原本叫做Swagger规范，它是一个由Linux基金会发起的项目，受到包括Google，IBM等公司的支持,</p><p>为restAPI的一个标准,其他还有API Blueprint RAML</p>',112),e={render:function(n,s){return p}}}}]);