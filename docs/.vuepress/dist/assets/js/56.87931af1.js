(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{644:function(e,a,p){"use strict";p.r(a);var v=p(17),t=Object(v.a)({},(function(){var e=this,a=e.$createElement,p=e._self._c||a;return p("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[p("h3",{attrs:{id:"module、chunk、bundle的区别"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#module、chunk、bundle的区别"}},[e._v("#")]),e._v(" module、chunk、bundle的区别")]),e._v(" "),p("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://image.zhuyuanzheng1.top/image-20220507143912301.png",alt:"image-20220507143912301"}}),e._v(" "),p("p",[e._v("module，chunk 和 bundle 其实就是同一份逻辑代码在不同转换场景下的取了三个名字：")]),e._v(" "),p("p",[e._v("我们直接写出来的是 module，webpack 处理时是 chunk，最后生成浏览器可以直接运行的 bundle。")]),e._v(" "),p("ul",[p("li",[p("p",[p("a",{attrs:{href:"https://www.webpackjs.com/concepts/loaders",target:"_blank",rel:"noopener noreferrer"}},[p("strong",[e._v("Loaders")]),p("OutboundLink")],1),e._v(": loader 允许你在 "),p("code",[e._v("require()")]),e._v(" 或“加载”的文件之前，先预处理文件。就像“任务执行器(task-runner)”")])]),e._v(" "),p("li",[p("p",[p("a",{attrs:{href:"https://www.webpackjs.com/concepts/plugins",target:"_blank",rel:"noopener noreferrer"}},[p("strong",[e._v("插件(Plugin)")]),p("OutboundLink")],1),e._v(": 一个含有 "),p("code",[e._v("apply")]),e._v(" 属性的 JavaScript 对象。该 "),p("code",[e._v("apply")]),e._v(" 属性会在 webpack 编译时被调用，并能在整个编译生命周期访问。这些插件包通常以某种方式扩展编译功能。")])]),e._v(" "),p("li",[p("p",[p("a",{attrs:{href:"https://www.webpackjs.com/concepts/hot-module-replacement",target:"_blank",rel:"noopener noreferrer"}},[p("strong",[e._v("热模块替换(Hot Module Replacement(HMR))")]),p("OutboundLink")],1),e._v(": 一个修改、添加或删除模块(modules)的过程，而正在运行中的应用程序无需重载加载整个页面")])])]),e._v(" "),p("p",[e._v("chunk，app.js是业务代码，vendor则是公共的第三方代码,例如vue，manifest.js则是运行时")]),e._v(" "),p("p",[e._v("第三方库很少改,可以缓存起来提高性能")]),e._v(" "),p("p",[e._v("tree shaking 只支持 esmodule")]),e._v(" "),p("p",[e._v("webpack5内置了terser-webpack-plugin,webpack4需要安装")]),e._v(" "),p("p",[e._v("webpack5支持持久缓存,webpack4只能缓存在内存中")]),e._v(" "),p("p",[e._v("Module Federation webpack5  作用微前端 减少编译体积")]),e._v(" "),p("p",[e._v("mfsu   Module Federation Speed Up  umi使用(基于Module Federation)")]),e._v(" "),p("h3",{attrs:{id:"code-splitting-代码分割"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#code-splitting-代码分割"}},[e._v("#")]),e._v(" code-splitting(代码分割)")]),e._v(" "),p("p",[p("strong",[e._v("作用")]),e._v(":允许开发者将代码分割成不同的包,然后可以按需加载或并行加载这些包,它可以用来实现更小的包,并控制资源加载优先级,如果使用正确，将对加载时间产生重大影响。")]),e._v(" "),p("p",[e._v("vue 路由组件和代码分割一起工作,动态导入组件(类似vue异步组件)")]),e._v(" "),p("p",[e._v("webpack external  外部引入插件也实现了代码分割的效果")]),e._v(" "),p("h3",{attrs:{id:"webpack执行流程"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#webpack执行流程"}},[e._v("#")]),e._v(" webpack执行流程")]),e._v(" "),p("p",[e._v("webpack启动后会在entry里配置的module开始递归解析entry所依赖的所有module，每找到一个module, 就会根据配置的loader去找相应的转换规则，对module进行转换后在解析当前module所依赖的module，这些模块会以entry为分组，一个entry和所有相依赖的module也就是一个chunk，最后webpack会把所有chunk转换成文件输出，在整个流程中webpack会在恰当的时机执行plugin的逻辑")]),e._v(" "),p("h3",{attrs:{id:"webpack5与webpack4-tree-shaking区别"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#webpack5与webpack4-tree-shaking区别"}},[e._v("#")]),e._v(" webpack5与webpack4 tree-shaking区别:")]),e._v(" "),p("p",[e._v("1.webpack5支持了commonjs的tree-shaking而webpack4不支持\n2.webpack4需要手动开启,webpack5自动开启\n3.webpack4不会分析模块的导出和引用之间的依赖关系;webpack 5 可以对模块中的标志进行分析,找出导出和引用之间的依赖关系,使得tree-shaking更彻底")]),e._v(" "),p("p",[e._v("dll-plugin把公共库打包成一个单独的库文件,以后只用打包业务代码,类似vite的预构建")]),e._v(" "),p("p",[e._v("hash的目的就是为了利用缓存")]),e._v(" "),p("h3",{attrs:{id:"区分hash-contenthash-chunkhash"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#区分hash-contenthash-chunkhash"}},[e._v("#")]),e._v(" 区分hash，contenthash，chunkhash")]),e._v(" "),p("ul",[p("li",[e._v("hash：每次构建会生成一个hash。和整个项目有关，只要有项目文件更改，就会改变hash  (一般不用)")]),e._v(" "),p("li",[e._v("contenthash：和单个文件的内容相关。指定文件的内容发生改变，就会改变hash。MiniCssExtractPlugin提取css,使用")]),e._v(" "),p("li",[e._v("chunkhash：和webpack打包生成的chunk相关。每一个entry，都会有不同的hash (输出文件一般使用)")])]),e._v(" "),p("p",[p("strong",[e._v("plugin")])]),e._v(" "),p("p",[e._v("可以做的事情: 代码转换.文件优化代码分割.模块合并.自动刷新.代码校验.自动发布")]),e._v(" "),p("p",[e._v("webpack有内置插件和通过npm安装的第三方插件")]),e._v(" "),p("p",[e._v("htmlwebpackplugin 作用可以在src目录设置一个模板然后build时在dist文件夹生成对应的模板,并且可以对生成的模板(index.html)进行操作,比如删掉引号 变成一行,并且把对应的js css 引入进来")]),e._v(" "),p("p",[e._v("mini-css-extract-plugin  webpack抽离css插件")]),e._v(" "),p("p",[e._v("optimize-css-assets-webpack-plugin  压缩抽离的css")]),e._v(" "),p("p",[e._v("clean-webpack-plugin 删掉在打包")]),e._v(" "),p("p",[e._v("copyWebpackPlugin 复制进dist目录")]),e._v(" "),p("p",[e._v("bannerPlugin 内置  版权声明插件")]),e._v(" "),p("hr"),e._v(" "),p("p",[p("strong",[e._v("loader")])]),e._v(" "),p("p",[e._v("babel-loader @babel/core  @babel/preset-env  //将es6转es5")]),e._v(" "),p("p",[e._v("@babel/plugin-transform-runtime  //运行时的包")]),e._v(" "),p("p",[e._v("@babel/polyfill  //解析实例方法")]),e._v(" "),p("p",[e._v("url-loader //图片转为base64，减少请求书,但比原文件大1/3，http请求可以进行缓存")]),e._v(" "),p("p",[e._v("scss-loader将scss转换为css,用css-loader来读取css,用style-loader来插入style标签")]),e._v(" "),p("p",[e._v("vue-loader是一个webpack loader 只是专门用来解析 .vue文件")]),e._v(" "),p("hr"),e._v(" "),p("p",[p("strong",[e._v("5个部分")])]),e._v(" "),p("p",[e._v("entry 定义项目打包的入口文件一般为main.js")]),e._v(" "),p("p",[e._v("output")]),e._v(" "),p("p",[e._v("loader  webpack只能处理js文件 ,loader可以将其他文件转化成webpack能够处理的模块")]),e._v(" "),p("p",[e._v("plugin  打包优化和压缩 定义环境变量 很多功能")]),e._v(" "),p("p",[e._v("mode  development  production")]),e._v(" "),p("hr"),e._v(" "),p("p",[e._v("webpack立刻读取webpack.config-.js文件，生成到dist目录下")]),e._v(" "),p("p",[e._v("webpack-dev-server 运行src下的代码，虚拟出build.js 测试")]),e._v(" "),p("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://image.zhuyuanzheng1.top/image-20220612210931777.png",alt:"image-20220612210931777"}}),e._v(" "),p("p",[e._v("在全局安装babel-cli 然后运行命令 babel 路径名 可以将es6转换为es5  还可以用babel网址进行转换")]),e._v(" "),p("p",[e._v("postcss  postcss-loader 可以自动加上 ms-  webkit-")]),e._v(" "),p("p",[e._v("创建 postcss.config.js(配置文件)")]),e._v(" "),p("p",[e._v("webpack可以更改webpack.config.js文件名称 webpack --config 文件名")]),e._v(" "),p("p",[e._v("npm run dev (webpack-dev-server) 只是将项目运行在内存中然后运行,不会生成dist目录 默认8080")]),e._v(" "),p("p",[e._v("esllint eslint-loader 在打包之前进行代码的检验  写代码的时候可以关掉")]),e._v(" "),p("p",[e._v("webpack可以实现多页应用,创建多个js入口,对应多个出口,生成多个html页面,并且对应各自的js文件")]),e._v(" "),p("p",[e._v("webpack npm run build 可以时时监控 文件变化然后进行打包")]),e._v(" "),p("p",[e._v("将webpack放在服务端启动,他们公用端口,localhost:3000/user 就是直接访问服务端  不加/user就相当于访问的是 npm run dev这个中的index.html")]),e._v(" "),p("p",[e._v("https://segmentfault.com/a/1190000017066322  webpack4 optimization")]),e._v(" "),p("p",[e._v("webpack-merge 将相同配置抽取出来 用来将 webpack.base.conf.js和webpack.dev.conf.js合并")]),e._v(" "),p("p",[e._v('cp-cli(复制一个文件到另一个文件)   eg:   "build:ui": "cp-cli src/plugins  lib/plugins"')]),e._v(" "),p("p",[e._v("cross-env能跨平台地设置及使用环境变量")]),e._v(" "),p("p",[e._v("http://vuejs-templates.github.io/webpack/")]),e._v(" "),p("p",[e._v("Webpack 有两种组织模块依赖的方式，同步和异步。异步依赖作为分割点，形成一个新的块")]),e._v(" "),p("p",[e._v("loader它本身是一个函数，接受源文件作为参数，返回转换的结果")]),e._v(" "),p("p",[e._v("开启监听模式后，没有变化的模块会在编译后缓存到内存中，而不会每次都被重新编译，所以监听模式的整体速度是很快的")]),e._v(" "),p("p",[e._v("webpack-dev-serve是基于express的一层封装 express类似于jquery 为了简化操作,它将在 localhost:8080 启动一个 express 静态资源 web 服务器，并且会以监听模式自动运行 webpack  并且通过一个 socket.io 服务实时监听它们的变化并自动刷新页面。")]),e._v(" "),p("p",[p("strong",[e._v("除了用webpack-dev-serve还可以用express webpack-dev-middleware 自己来配置服务器")])]),e._v(" "),p("p",[e._v("webpack --watch 会用terser-webpack-plugin替换掉uglifyjs-webpack-plugin解决uglifyjs不支持es6语法问题时监控代码,发生更改会重新编译")]),e._v(" "),p("p",[e._v("webpack-cli init")]),e._v(" "),p("p",[e._v("babel-loader")]),e._v(" "),p("p",[e._v("drop_console:true 压缩时将console去掉")]),e._v(" "),p("p",[e._v("环境变量 .env  https://segmentfault.com/a/1190000015133974")]),e._v(" "),p("p",[e._v("打包最好只打包自己的源代码")]),e._v(" "),p("p",[e._v("通过配置webpack externals可以在我们代码中通过import导入的时候，不去把node modules里面的文件打包进去")]),e._v(" "),p("p",[e._v("可以零配置 npx webpack  webpack 可以把node js代码 打包成在浏览器运行的代码(可以打包require)")]),e._v(" "),p("p",[e._v("webpack会调用webpack-cli")]),e._v(" "),p("p",[e._v("loader种类:  pre前面执行的loader normal普通loader内联loader后置")]),e._v(" "),p("p",[e._v("暴露全局")]),e._v(" "),p("ol",[p("li",[e._v("expose-loader 暴露在window上")]),e._v(" "),p("li",[e._v("providePlugin合每个入提供一个$")]),e._v(" "),p("li",[e._v("引入不打包")])]),e._v(" "),p("p",[e._v("给某一类文件加上cdn")]),e._v(" "),p("h3",{attrs:{id:"sourcemap-文件出错了会标识当前报错的列和行"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#sourcemap-文件出错了会标识当前报错的列和行"}},[e._v("#")]),e._v(" sourcemap(文件出错了会标识当前报错的列和行)")]),e._v(" "),p("ol",[p("li",[p("p",[e._v("devtool:'source-map'，//增加映射文以帮我们调试源代码  不会产生单独的文件但是可以显示行和列")])]),e._v(" "),p("li",[p("p",[e._v("devtool:'eval-source-map'，//不会产生列但是是一个单独的映射文件")])]),e._v(" "),p("li",[p("p",[e._v("devtool:'cheap-module-source-map'，//产生后你可以保留起来  不会长生文件集成在打包后的文件中不会产生列")])]),e._v(" "),p("li",[p("p",[e._v("devtool：'cheap-module-eval-source-map'")])])]),e._v(" "),p("p",[e._v("采用多线程打包 Happypack 第三方模块,现在用thread loader代替")]),e._v(" "),p("p",[e._v("scope hosting 自动优化一些简单的代码")]),e._v(" "),p("p",[e._v("bin目录下 npm link")]),e._v(" "),p("p",[e._v("AST(abstract syntax tree)抽象语法树")]),e._v(" "),p("h3",{attrs:{id:"参考文章"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章")]),e._v(" "),p("p",[p("a",{attrs:{href:"https://github.com/ShowJoy-com/showjoy-blog/issues/7",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack运行原理"),p("OutboundLink")],1)]),e._v(" "),p("p",[p("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/385272270",target:"_blank",rel:"noopener noreferrer"}},[e._v("mfsu介绍"),p("OutboundLink")],1)]),e._v(" "),p("p",[p("a",{attrs:{href:"https://blog.csdn.net/gtLBTNq9mr3/article/details/112504161",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack5与webpack4 tree-shaking对比"),p("OutboundLink")],1)]),e._v(" "),p("p",[p("a",{attrs:{href:"https://webpack.wuhaolin.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("电子书-深入浅出webpack"),p("OutboundLink")],1)]),e._v(" "),p("p",[e._v("权限判断用位运算")])])}),[],!1,null,null,null);a.default=t.exports}}]);