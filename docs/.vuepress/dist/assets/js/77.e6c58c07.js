(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{665:function(t,v,_){"use strict";_.r(v);var a=_(17),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("通常加密算法也指密码学")]),t._v(" "),_("p",[t._v("分为可逆加密和不可逆加密，可逆加密又可以分为：对称加密和非对称加密")]),t._v(" "),_("p",[t._v("签名算法中，私钥用于对数据进行签名，公钥用于对签名进行验证")]),t._v(" "),_("p",[_("strong",[t._v("AES")]),t._v(" Advanced Encryption Standard  高级加密标准  微信小程序加密传输使用这个算法")]),t._v(" "),_("p",[_("strong",[t._v("MD5")]),t._v(" Message-Digest Algorithm  信息摘要算法  128位(16字节)")]),t._v(" "),_("p",[_("strong",[t._v("SHA")]),t._v(" Secure Hash Algorithm  安全散列算法")]),t._v(" "),_("p",[_("strong",[t._v("RSA")]),t._v("  3个发明者的姓氏首字母  github ssh使用")]),t._v(" "),_("p",[t._v("不可逆加密算法:  MD5 SHA1 SHA-256 SHA-512")]),t._v(" "),_("p",[t._v("对称加密算法: AES128 AES256  DES  3DES  RC5")]),t._v(" "),_("p",[t._v("非对称加密算法: RSA  ECC(移动设备用)")]),t._v(" "),_("p",[t._v("Hash算法: md5")]),t._v(" "),_("h3",{attrs:{id:"对称加密和非对称加密的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密的区别"}},[t._v("#")]),t._v(" 对称加密和非对称加密的区别")]),t._v(" "),_("p",[t._v("对称加密 加密和解密都用同一把密钥")]),t._v(" "),_("p",[t._v("非对称加密  加密和解密用的不是同一把秘钥,分公私钥")]),t._v(" "),_("h3",{attrs:{id:"非对称加密原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密原理"}},[t._v("#")]),t._v(" 非对称加密原理")]),t._v(" "),_("p",[t._v("传输双方均有自己的一对密钥,共4把,服务器生成公钥和私钥并把公私给客户端,客户端生成公钥和私钥,把公钥给服务器,服务器给客户端传递消息用客户端的公钥加密然后发送,客户端接收信息用客户端私钥解密,客户端给服务器发送消息同理")]),t._v(" "),_("p",[t._v("对称加密加解密都是同一把密钥,泄漏之后就不安全,非对称只会传公钥,泄漏也没有影响")]),t._v(" "),_("h3",{attrs:{id:"https原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https原理"}},[t._v("#")]),t._v(" https原理")]),t._v(" "),_("p",[t._v("https 结合了对称加密和非对称加密,用非对称加密的方式来传输对称加密的密钥，之后用对称加密的方式来传输数据")]),t._v(" "),_("h3",{attrs:{id:"数字证书"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[t._v("#")]),t._v(" 数字证书")]),t._v(" "),_("p",[t._v("非对称加密也有可能被中间人攻击,需要确定这把公钥就是服务器的,数字证书就是解决这个问题的")]),t._v(" "),_("p",[t._v("实现流程:")]),t._v(" "),_("ol",[_("li",[t._v("我们需要找到一个第三方机构，它是一个拥有公信力、大家都认可的认证中心，那就是数字证书认证机构(简称CA)。")]),t._v(" "),_("li",[t._v("服务器在给客户端传输公钥的过程中，会把公钥以及服务器的个人信息通过Hash算法生成信息摘要。为了防止信息摘要被人调换，客户端还会用CA提供的私钥对信息摘要进行加密来形成数字签名。并且，最后还会把原来没Hash算法之前的个人信息以及公钥和数字签名合并在一起，形成数字证书。")]),t._v(" "),_("li",[t._v("当客户端拿到这份数字证书之后，就会用CA提供的公钥来对数字证书里面的数字签名进行解密来得到信息摘要，然后对数字证书里服务器的公钥以及个人信息进行Hash得到另外一份信息摘要。最后把两份信息摘要进行对比，如果一样，则证明这个人是服务器，否则就不是。这样，就可以保证服务器的公钥安全着交给客户端了")])]),t._v(" "),_("p",[t._v("CA的证书内置在系统里了,不需要进行传递,安全性就比较有保障了")]),t._v(" "),_("h3",{attrs:{id:"长度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#长度"}},[t._v("#")]),t._v(" 长度")]),t._v(" "),_("p",[t._v("MD5 128 位（32 个字符）")]),t._v(" "),_("p",[t._v("SHA1 160 位（40 个字符）")]),t._v(" "),_("p",[t._v("SHA256 256 位 (64个字符)")]),t._v(" "),_("h3",{attrs:{id:"参考链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://segmentfault.com/a/1190000019687184",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTPS的加密方式"),_("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=s.exports}}]);